{
    "name": "templavoilaplus/templavoilaplus",
    "description": "Building kit for custom  pages and content elements with individual fields, containers and backend layouts. Supporting drag'n'drop and multiple references.",
    "license": [
        "GPL-2.0-or-later"
    ],
    "type": "typo3-cms-extension",
    "keywords": [
        "TYPO3",
        "extension",
        "template",
        "engine"
    ],
    "authors": [
        {
            "name": "Alexander Opitz",
            "email": "alexander.opitz@davitec.de",
            "homepage": "https://www.davitec.de",
            "role": "Developer"
        }
    ],
    "homepage": "https://templavoila.plus/",
    "require": {
        "php": ">=8.1.0 <8.2.99",
        "typo3/cms-core": "^12.4.0",
        "typo3/cms-frontend": "^12.4.0"
    },
    "require-dev": {
        "codeception/codeception": "^4.1 || ^5.0.0",
        "codeception/module-asserts": "^2.0 || ^3.0.0",
        "codeception/module-cli": "^2",
        "codeception/module-webdriver": "^2 || ^3.0.0",
        "ergebnis/composer-normalize": "2.28.3",
        "friendsofphp/php-cs-fixer": "^3.4.0",
        "helhum/typo3-console": "^8.0.0 || ^v7.1.1",
        "helmich/typo3-typoscript-lint": "^2.5.2 || ^v3.1.0",
        "jangregor/phpstan-prophecy": "^1.0.0",
        "jpmschuler/tvplus_test_theme": "*@dev",
        "php-coveralls/php-coveralls": "^2.5.2",
        "phpspec/prophecy-phpunit": "^2.0",
        "phpstan/extension-installer": "^1.1.0",
        "phpstan/phpstan": "^1.6.2",
        "phpstan/phpstan-phpunit": "^1.1.1",
        "phpunit/phpunit": "^9.5.20",
        "saschaegerer/phpstan-typo3": "^1.1.2",
        "seld/jsonlint": "^1.9.0",
        "squizlabs/php_codesniffer": "^3.6.2",
        "symfony/yaml": "^4.4.29 || ^5.3.6 || ^6.0",
        "typo3/cms-impexp": "^12.4.0",
        "typo3/cms-lowlevel": "^12.4.0",
        "typo3/coding-standards": "^0.7.1",
        "typo3/minimal": "^v12.4.0",
        "typo3/testing-framework": "^8.0.0"
    },
    "replace": {
        "typo3-ter/templavoilaplus": "self.version"
    },
    "conflict": {
        "templavoila/templavoila": "*",
        "typo3-ter/templavoila": "*"
    },
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "Tvp\\TemplaVoilaPlus\\": "Classes/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tvp\\TemplaVoilaPlus\\Tests\\": "Tests/"
        }
    },
    "config": {
        "allow-plugins": {
            "typo3/class-alias-loader": true,
            "typo3/cms-composer-installers": true,
            "ergebnis/composer-normalize": true,
            "phpstan/extension-installer": true
        },
        "bin-dir": ".Build/bin",
        "preferred-install": {
            "*": "dist"
        },
        "sort-packages": true,
        "vendor-dir": ".Build/vendor"
    },
    "extra": {
        "branch-alias": {
            "dev-main": "12.0.x-dev"
        },
        "typo3/cms": {
            "app-dir": ".Build",
            "extension-key": "templavoilaplus",
            "web-dir": ".Build/public"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "@link-extension"
        ],
        "ci": [
            "@ci:static"
        ],
        "ci:composer:normalize": "@composer normalize --dry-run",
        "ci:composer:psr-verify": "@composer dumpautoload --optimize --strict-psr",
        "ci:coverage": [
            "@ci:coverage:unit",
            "@ci:coverage:functional"
        ],
        "ci:coverage:functional": [
            "@coverage:create-directories",
            ".Build/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml --whitelist Classes --coverage-php=.Build/coverage/functional.cov Tests/Functional"
        ],
        "ci:coverage:merge": [
            "@coverage:create-directories",
            "@php tools/phpcov merge --clover=./.Build/logs/clover.xml ./.Build/coverage/"
        ],
        "ci:coverage:unit": [
            "@coverage:create-directories",
            ".Build/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml --whitelist Classes --coverage-php=.Build/coverage/unit.cov Tests/Unit"
        ],
        "ci:dynamic": [
            "@ci:tests"
        ],
        "ci:json:lint": "find . ! -path '*.Build/*' ! -path '*node_modules/*' -name '*.json' | xargs -r php .Build/bin/jsonlint -q",
        "ci:php": [
            "@ci:php:cs-fixer",
            "@ci:php:lint",
            "@ci:php:sniff",
            "@ci:php:stan"
        ],
        "ci:php:cs-fixer": "php-cs-fixer fix --config .php-cs-fixer.php -v --dry-run --using-cache no --diff",
        "ci:php:lint": "find .*.php *.php Classes Configuration Tests -name '*.php' -print0 | xargs -r -0 -n 1 -P 4 php -l",
        "ci:php:lint:docker:php74": "tools/runTests.sh -s lintPhp -p 7.4",
        "ci:php:lint:docker:php80": "tools/runTests.sh -s lintPhp -p 8.0",
        "ci:php:lint:docker:php81": "tools/runTests.sh -s lintPhp -p 8.1",
        "ci:php:lint:local": "@ci:php:lint",
        "ci:php:singleFile": "tools/codeStyleCheckSingleFile.sh",
        "ci:php:sniff": [
            "@ci:php:sniff:failOnErrors",
            "@ci:php:sniff:continueOnWarnings"
        ],
        "ci:php:sniff:continueOnWarnings": "phpcs Classes Configuration Tests || true",
        "ci:php:sniff:docker:php74": "phpcs Classes Configuration Tests",
        "ci:php:sniff:failOnErrors": "phpcs -n Classes Configuration Tests",
        "ci:php:sniff:failOnWarnings": "phpcs Classes Configuration Tests",
        "ci:php:stan": "phpstan --no-progress analyse --level 0",
        "ci:php:stan:generateBaseline": "phpstan --no-progress analyse --level 0 --generate-baseline",
        "ci:static": [
            "@ci:composer:normalize",
            "@ci:json:lint",
            "@ci:php:cs-fixer",
            "@ci:php:lint",
            "@ci:php:sniff",
            "@ci:php:stan",
            "@ci:ts:lint",
            "@ci:yaml:lint"
        ],
        "ci:tests": "@ci:tests:local",
        "ci:tests:acceptance": "@ci:tests:acceptance:docker",
        "ci:tests:acceptance:clean": "rm -rf .Build/public/typo3temp/var/tests/AcceptanceReports",
        "ci:tests:acceptance:docker": "@ci:tests:acceptance:docker:php74",
        "ci:tests:acceptance:docker:php74": "tools/runTests.sh -s acceptance -p 7.4",
        "ci:tests:acceptance:docker:php80": "tools/runTests.sh -s acceptance -p 8.0",
        "ci:tests:acceptance:docker:php81": "tools/runTests.sh -s acceptance -p 8.1",
        "ci:tests:acceptance:local": "echo \"acceptance tests can't be run locally\"",
        "ci:tests:docker": [
            "@ci:tests:unit:docker",
            "@ci:tests:functional:docker",
            "@ci:tests:acceptance:docker"
        ],
        "ci:tests:docker:php74": [
            "@ci:tests:unit:docker:php74",
            "@ci:tests:functional:docker:php74",
            "@ci:tests:acceptance:docker:php74"
        ],
        "ci:tests:docker:php80": [
            "@ci:tests:unit:docker:php80",
            "@ci:tests:functional:docker:php80",
            "@ci:tests:acceptance:docker:php80"
        ],
        "ci:tests:docker:php81": [
            "@ci:tests:unit:docker:php81",
            "@ci:tests:functional:docker:php81",
            "@ci:tests:acceptance:docker:php81"
        ],
        "ci:tests:docker:phpall": [
            "@ci:tests:docker:php74",
            "@ci:tests:docker:php80",
            "@ci:tests:docker:php81"
        ],
        "ci:tests:functional": "@ci:tests:functional:local",
        "ci:tests:functional:docker": "@ci:tests:functional:docker:php74",
        "ci:tests:functional:docker:php74": "tools/runTests.sh -s functional -p 7.4",
        "ci:tests:functional:docker:php80": "tools/runTests.sh -s functional -p 8.0",
        "ci:tests:functional:docker:php81": "tools/runTests.sh -s functional -p 8.1",
        "ci:tests:functional:local": "find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo \"Running functional test suite {}\"; .Build/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml {}';",
        "ci:tests:local": [
            "@ci:tests:unit:local",
            "@ci:tests:functional:local",
            "@ci:tests:acceptance:local"
        ],
        "ci:tests:unit": "@ci:tests:unit:local",
        "ci:tests:unit:docker": "@ci:tests:unit:docker:php74",
        "ci:tests:unit:docker:php74": "tools/runTests.sh -s unit -p 7.4",
        "ci:tests:unit:docker:php80": "tools/runTests.sh -s unit -p 8.0",
        "ci:tests:unit:docker:php81": "tools/runTests.sh -s unit -p 8.1",
        "ci:tests:unit:local": ".Build/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit",
        "ci:ts:lint": "typoscript-lint -c Configuration/TsLint.yml --ansi -n --fail-on-warnings -vvv Configuration/TypoScript",
        "ci:yaml:lint": "find . ! -path '*.Build/*' ! -path '*node_modules/*' -regextype egrep -regex '.*.ya?ml$' | xargs -r php ./.Build/bin/yaml-lint",
        "composer:init": [
            "composer install"
        ],
        "coverage:create-directories": "mkdir -p build/logs .Build/coverage",
        "docs:generate": [
            "docker run --rm ghcr.io/t3docs/render-documentation show-shell-commands > tempfile.sh; echo 'dockrun_t3rd makehtml' >> tempfile.sh; bash tempfile.sh; rm tempfile.sh"
        ],
        "docs:generate:docker": [
            "tools/runTests.sh -s docsGenerate"
        ],
        "docs:generate:pullimage": [
            "docker pull ghcr.io/t3docs/render-documentation || true",
            "docker tag ghcr.io/t3docs/render-documentation t3docs/render-documentation || true"
        ],
        "fix:composer:normalize": "@composer normalize --no-check-lock",
        "fix:php": [
            "@fix:php:cs",
            "@fix:php:sniff"
        ],
        "fix:php:cs": "php-cs-fixer fix --config .php-cs-fixer.php",
        "fix:php:sniff": "phpcbf Classes Configuration Tests",
        "initTools": [
            "@composer:init",
            "@yarn:init"
        ],
        "js:lint": [
            "npm run lint:js"
        ],
        "js:lint:fix": [
            "npm run lint:js:fix"
        ],
        "link-extension": [
            "@php -r 'is_dir($extFolder=__DIR__.\"/.Build/public/typo3conf/ext/\") || mkdir($extFolder, 0777, true);'",
            "@php -r 'file_exists($extFolder=__DIR__.\"/.Build/public/typo3conf/ext/templavoilaplus\") || symlink(__DIR__,$extFolder);'"
        ],
        "npm:init": [
            "@yarn:init"
        ],
        "phpstan:baseline": ".Build/bin/phpstan  --generate-baseline=phpstan-baseline.neon",
        "prepare-release": [
            "rm .gitignore",
            "rm -rf .Build",
            "rm -rf .ddev",
            "rm -rf .github",
            "rm -rf .gitlab",
            "rm -rf Tests",
            "rm -rf tools",
            "rm .crowdin.yml",
            "rm .editorconfig",
            "rm .gitattributes",
            "rm .mergify.yml",
            "rm .php-cs-fixer.php",
            "rm .phpstorm.meta.php",
            "rm .eslintignore",
            "rm .eslintrc.json",
            "rm .prettierrc.js",
            "rm package.json",
            "rm stylelint.config.js",
            "rm phive.xml",
            "rm phpstan-baseline.neon",
            "rm phpstan.neon",
            "rm phpcs.xml",
            "rm stylelint.config.js"
        ],
        "style:lint": [
            "npm run lint:style"
        ],
        "style:lint:fix": [
            "npm run lint:style:fix"
        ],
        "xliff:lint": [
            "echo \"[WARNING] this only works if wget and xmllint are installed locally\"",
            "wget -q -O .Build/xliff-core-1.2-strict.xsd https://docs.oasis-open.org/xliff/v1.2/os/xliff-core-1.2-strict.xsd",
            "xmllint --schema .Build/xliff-core-1.2-strict.xsd --noout $(find Resources/Private/Language -name '*.xlf')"
        ],
        "yarn:init": [
            "yarn --cwd Resources/Private install"
        ]
    },
    "scripts-descriptions": {
        "ci": "Runs all dynamic and static code checks.",
        "ci:composer:normalize": "Checks the composer.json.",
        "ci:coverage:functional": "Generates the code coverage report for functional tests.",
        "ci:coverage:merge": "Merges the code coverage reports for unit and functional tests.",
        "ci:coverage:unit": "Generates the code coverage report for unit tests.",
        "ci:dynamic": "Runs all PHPUnit tests (unit and functional).",
        "ci:json:lint": "Lints the JSON files.",
        "ci:php": "Runs all static checks for the PHP files.",
        "ci:php:copypaste": "Checks for copy'n'pasted PHP code.",
        "ci:php:cs-fixer": "Checks the code style with the PHP Coding Standards Fixer (PHP-CS-Fixer).",
        "ci:php:lint": "Lints the PHP files for syntax errors.",
        "ci:php:sniff": "Checks the code style with PHP_CodeSniffer (PHPCS).",
        "ci:php:stan": "Checks the PHP types using PHPStan.",
        "ci:static": "Runs all static code checks (syntax, style, types).",
        "ci:tests": "Runs all PHPUnit tests (unit and functional).",
        "ci:tests:functional": "Runs the functional tests.",
        "ci:tests:unit": "Runs the unit tests.",
        "ci:ts:lint": "Lints the TypoScript files.",
        "ci:yaml:lint": "Lints the YAML files.",
        "coverage:create-directories": "Creates the directories needed for recording and merging the code coverage reports.",
        "docs:generate": "Renders the extension ReST documentation.",
        "fix:php": "Runs all fixers for the PHP code.",
        "fix:php:cs": "Fixes the code style with PHP-CS-Fixer.",
        "fix:php:sniff": "Fixes the code style with PHP_CodeSniffer.",
        "phpstan:baseline": "Updates the PHPStan baseline file to match the code.",
        "prepare-release": "Removes development-only files in preparation of a TER release."
    }
}
