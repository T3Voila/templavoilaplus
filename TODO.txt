This TODO is very old, maybe some points aren't valid anymore.
Hopefully this will be filtered and put into well defined issues in the not so far future.

******************
TODO
******************

INBOX

	- TV control center:
		- Conversion of FlexForm data when langChildren is switched from 0<->1

	- Management: Overview of Page Templates as set in the tree structure
		- Look for Flexible Content ELements as well and evaluate if their data structure / template object matches...

	- "Web > Page" Backend Modules:
		- New wizard:
			- In Content Element Wizard, also list records to insert as references fetched from the storage page
			- Import t3d files with FlexForm structures inside (requires support for FlexForms in T3D - waiting for Kasper)
			- Offer to make copies of pages/elements found storage page (or otherwise, defined by Page TSconfig, "mod.web_txtemplavoilaplusLayout" ?)
		- User management: In a Data structure define which users and groups has access to edit etc from this point and outwards. At any point in the tree these rights can be overridden.
		- "createPageWizard.fieldNames" moved to "mod.web_txtemplavoilaplusLayout" branch of Page Tsconfig!

	- Add option to DS which defines the field width in percent for display in the page module. Comes handy if you have a big content area and a small "right bar" etc.

Various:
	- BUG: When clicking the path link of a RANGE to preview it, we will see only the first element in the visual frame - because the RANGE part is cut away!
	- BUG: When mapping via File > Filelist old mapping information is restored - this should be bound to the filename of the template file so a FRESH mapping approach does not get old mapping info.
	- Perform a check of template files for block/solo tag consistens.

	- Conversion tool that can take the original tt_content elements from columns are move into relations of Templavoila - in whole brances of the tree!
	- Create conditions for DS/TO selection, configurable via Page TSconfig:
		- Depending on rootlevel
		- Depending on branch
	- Implement access rights on CE level (instead on page level), use ACL! -> Core changes by Kasper
	- Do proper interface for commonly used classes / functions
		- rules class API
		- DS / XML functions


- Mapping features (Kasper, not urgent but annoying for developers...):
	- Ability to map NEW non-existing attributes AND possibly just any content into HTML tags (like for images ' width="xxx" height="xxx"'.
	- Ability to select attributes to be REMOVED in a tag.
	- Ability to map a single field to MANY elements. So the same value can be inserted at multiple positions.
	- For dynamic creation of Data Structure: Have an intelligent auto-mapper, trying to find which elements might most likely be mapped and which not.
	- Support inclusion of the EXTERNAL files in the TO serialized array (new field?) so that TOs could be exported WITH all images, stylesheets, JavaScripts... (portable!)
	- When mapping to eg. a Outer table which has an id, then the sub elements will lock them selves to the id as well, which means when we change the mapping for the outer table we will loose the inner mapping.
	- Allow to re-order the elements in DataStructures when created on-the-fly
	- Anchors in template document
	- Non-destructive explode for <tr> / <option>
	- For predefined images, allow to read and keep other parameters than src/width/height
	- Option to wipe out the id's used (or those prefixed "TV-") since they could be repetitive.
	- BUG: IF there are <a> tag elements in the source which has only "name" attribute then the numbering doesn't work. For instance: <a name=".."> .... <a href="blabla">. The last A-tag is detected as "a[1]" while it should be a[2]. The problem is that when you set mapping mode (INNER /OUTER) for a[1] it will find the REAL a[1] tag, not the one with the href- attribute!
	- BUG: Specifying a range: It only sees the SAME kind of tags even if other tags are found on the same level. An example was: <p>... <font>... <p> ... etc. tags. All <p> tags was found and the range was made from the first to the last. BUT ONLY the <p> tags were substutited - the <font> tags in between stayed after the mapping! That was strange!
	- // ONLY ALLOW "arrays" inside of "sections" - otherwise it does not make so much sense and it is harder to handle; basically all stuff in a SECTION is defined to be a container and that is what the "array" handles...
	- Better define vocabulary! Also define what is a "HTML-path" etc.
	- Find method for displaying images in sample data.
	- Add caching mechanism for retrieval of template content (so we can also have a DYNAMIC binding to the template source, possibly with a timed caching)
	- Support for http-URLs instead of files (incl. caching)
	- Icons for MAP/ChMode/Remap
	- Performance:
		- Caching of splitting template files -> faster process
	- Allow "old-style" mapping where a data structure immediately finds subparts/markers in HTML code...
	- Re-mapping: Find a way to not overwrite all changes that have been made to the DS's typoscript object paths.
	- ?: How can extensions supply a default template Array when no Template Object exists yet, mapping the data? What about the data structure containing some sample markup as well which means we can always assemble a simple display from that. Or even a nice default display which is of course stylable by CSS. AND this default
	- Implement the language scheme?
- "cm" Backend Modules:
	- getLL usage in whole module.
	- CSH for whole module

- Benoit request: "Re-map a HTML node ==> try to re-map the children"
- Benoit request: "Anchor in the HTML page when you are mapping fields... you are scrolling for each field"

RULES:
		a = CType={text,textpic},list_type=tx_templavoilaplus_pi1


		b :
			CType = list
			list_type = tx_templavoilaplus_pi1
			txtemplavoila_to = 3
			width = 0-200

		a :
			CType = list
			list_type = tx_templavoilaplus_pi1

		c :
			CType = list

WIZARDS & CLICK MENUS:
	- Create new content wizard:
		- FEATURE: Implement Flexible Content Elements
		- FEATURE: Quick-Click mode: Shows only the icons of content elements in a layer, like a clickmenu, including Flexible Content Elements, configurable
	- Create new page wizard:
		- it should be possible to disable the new page wizard at all
	- Select Template CM: (NEW)
		- FEATURE: Instead of having to edit the page header, provide a horizontal clickmenu for selecting DS/TO by clicking the TO icon.
	- TypoScript Tool: (NEW)
		- Makes it easier to edit the TypoScript chunks within DataStructures, accessable from FCE or DS
		- implement as clickmenu?
	- Click menu "Pages using this element ->":
		- Display language flag icon and jump to correct language
		- Hide second level menuitems provided by other extenions (Needs little core change in alt_clickemenu.php!)

PAGE MODULE:
	- Display of CEs
		- Better preview for TABLE element
	- Configure option (in DS): Columns *below* each other instead of side by side display (DASSAULT)
	- Show content in module depending on page type, eg. "sysFolder", "spacer", "Normal / Advanced" etc.
		- For shortcut pages etc, rather show which page it is referring to in Web>Page (TV)
	- After creating a new page, the highlighted <td> in page tree must be set (ids array) - how? through top bar via JS?
	- Create little warning message for FCEs which have no TO selected
	- Bug: Language selector shows broken images when no flag has been defined in sys_languages

DOCUMENTATION:
	- Create manual:
		- Description of Page Module
		- TSconfig reference
