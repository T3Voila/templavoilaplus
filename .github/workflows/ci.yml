# This GitHub Actions workflow uses the same development tools that are also installed locally
# via Composer or PHIVE and calls them using the Composer scripts.
name: Tests
on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '15 3 * * 1'
jobs:
  php-lint:
    name: "PHP linter"
    runs-on: ubuntu-20.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: none
          tools: composer:v2.3
      - name: "Run PHP lint"
        run: "composer ci:php:lint"
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 8.1
          - 8.2
  code-quality:
    name: "Code quality checks"
    runs-on: ubuntu-20.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: none
          tools: composer:v2.3
      - name: "Show Composer version"
        run: composer --version
      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v3
        with:
          key: "php${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          path: ~/.cache/composer
          restore-keys: "php${{ matrix.php-version }}-composer-\n"
      - name: "Install Composer dependencies"
        run: "composer install --no-progress"
      - name: "Run command"
        run: "composer ci:${{ matrix.command }}"
    strategy:
      fail-fast: false
      matrix:
        command:
          - "composer:normalize"
          - "json:lint"
          - "php:cs-fixer"
          - "php:sniff"
          - "php:stan"
          - "ts:lint"
          - "yaml:lint"
        php-version: [ '8.1', '8.2' ]
  code-quality-frontend:
    name: "Code quality frontend checks"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        command:
          - "style"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Install modules"
        run: yarn
      - name: "Run command"
        run: "yarn lint:${{ matrix.command }}"
  xliff-lint:
    name: "Xliff linter"
    runs-on: ubuntu-20.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Run the xliff lint"
        uses: TYPO3-Continuous-Integration/TYPO3-CI-Xliff-Lint@v1
  tests:
    name: "Tests"
    runs-on: ubuntu-20.04
    needs: php-lint
    strategy:
      matrix:
        php: [ '8.1', '8.2' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install testing system
        run: tools/runTests.sh -p ${{ matrix.php }} -s composerInstall

      - name: Unit Tests
        run: tools/runTests.sh -p ${{ matrix.php }} -s unit

      - name: Functional Tests
        run: tools/runTests.sh -p ${{ matrix.php }} -s functional
